import streamlit as st
from PIL import Image
from gensim.models import KeyedVectors


st.set_page_config(page_title="–û–±–∑–æ—Ä –ø–æ–¥—Ö–æ–¥–æ–≤", page_icon="üîç", layout="wide")

def set_styles():
    st.markdown("""
    <style>
                
    .stApp { 
        background: rgb(20, 19, 28);
    }
                
    h1 { 
        color: #FFFFE0; font-weight: 700; text-align: center; font-size: 3rem; margin-bottom: 0.5rem; 
    }
                
    h2, h3 { 
        color: #FFFFE0; font-weight: 600; 
    }
                
    .stButton>button {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: #FFFFE0; border-radius: 7px; padding: 0.75rem 3rem; font-weight: 600;
        font-size: 1.1rem; border: none; box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        transition: all 0.3s ease; width: 100%;
    }
                
    .stButton>button:hover {
        transform: translateY(-2px); box-shadow: 0 8px 20px rgba(102, 126, 234, 0.6);
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
    }
                
    .stTextInput>div>div>input, .stTextArea>div>div>textarea {
        border-radius: 7px; border: 2px solid #e5e7eb; font-size: 1rem; padding: 0.75rem; transition: all 0.3s ease;
    }
                
    .stTextInput>div>div>input:focus, .stTextArea>div>div>textarea:focus {
        border-color: #667eea; box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
                
    .stTextInput>label, .stTextArea>label { 
        font-weight: 1000; color: #FFFFE0; font-size: 1.1rem; 
    }
                
    [data-testid="stSidebar"] { 
        background: #0e1117; 
    }
                
    [data-testid="stSidebar"] [data-testid="stMarkdownContainer"] { 
        color: white;
    }
                
    .metric-container { 
        background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%); border-radius: 12px; padding: 0.1rem; text-align: center; margin: 0.1rem; 
    }
    
    .metric-value {
        font-size: 2.5rem; font-weight: 700; color: #0369a1; margin-top: 0.1rem;
    }
    
    .metric-label {
        font-size: 1rem; color: #64748b;
    }
    
    .stImage.round-logo img {
        border-radius: 50%;
    }
    
    .stImage.default-img img {
        border-radius: 0;
    }
    
    .streamlit-expanderHeader {
        color: #FFFFE0; font-weight: 600;
    }
    
    </style>
    """, unsafe_allow_html=True)

if st.button("‚Üê"):
    st.switch_page("app.py")

st.title("–û–±–∑–æ—Ä –ø–æ–¥—Ö–æ–¥–æ–≤", anchor=None)

st.info("–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ TF-IDF")

st.markdown("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ ***TF-IDF*** –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏ —Å–ª–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ. Score –ø—Ä–∏–º–µ—Ä–Ω–æ ***0.955***," \
" –Ω–æ –Ω–µ —É–¥–∞–≤–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏. –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏–Ω—Ñ–æ–ø–æ–≤–æ–¥–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏" \
" –∑–∞–≥–æ–ª–æ–≤–∫–∞, –º–æ–¥–µ–ª—å –≤—Å–µ —Ä–∞–≤–Ω–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–ª–∞ –Ω–æ–≤–æ—Å—Ç—å, –∫–∞–∫ –ø—Ä–∞–≤–¥–∏–≤—É—é, –∞ –≤—Å–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –±—ã–ª–∏ —Å –º–∞–ª–µ–Ω—å–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é.")

st.markdown("---")
st.markdown("–ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞ —Å—Ä–∞–≤–Ω–∏–ª ***3 –º–æ–¥–µ–ª–∏***:")
st.markdown("* Logistic Regression")
st.markdown("* Naive Bayes")
st.markdown("* Random Forest")
st.markdown("–ù–∞–∏–±–æ–ª—å—à–∏–π —Å–∫–æ—Ä –∏ –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–º, –∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–∞—Ö –≤—ã–¥–∞–ª–∞ ***–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è***, –∫–∞–∫ –≤–∏–¥–Ω–æ –ø–æ –≥—Ä–∞—Ñ–∏–∫–∞–º.")
st.image("assets/models_scores.png")

st.markdown("---")
st.image("assets/text_lenght.png")

st.markdown("---")
st.image("assets/wordcloud_vectorized.png")

st.info("–í–µ–∫—Ç–æ—Ä–∏–∞–∑—Ü–∏—è —á–µ—Ä–µ–∑ Word2Vec")

st.markdown("–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Word2Vec —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–≤—è–∑—å –º–µ–∂–¥—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ—Å–Ω–æ–≤–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º." \
"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º. –¢–æ –µ—Å—Ç—å, –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –ª–æ–∂–Ω—ã–π," \
"–º–æ–¥–µ–ª—å —ç—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –ø–æ—á–µ–º—É –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–∞–≤–¥–∏–≤–æ—Å—Ç–∏ –Ω–æ–≤–æ—Å—Ç–∏, –æ–Ω–∞ –≤—Å–µ —Ä–∞–≤–Ω–æ —Ñ–µ–π–∫–æ–≤–∞—è.")

st.markdown("---")
st.markdown("–ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞ —Å—Ä–∞–≤–Ω–∏–ª ***2 –º–æ–¥–µ–ª–∏***:")
st.markdown("* Logistic Regression")
st.markdown("* Random Forest")
st.markdown("–ù–∞–∏–±–æ–ª—å—à–∏–π —Å–∫–æ—Ä –∏ –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–º, –∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–∞—Ö –≤—ã–¥–∞–ª–∞ ***–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è***.")

st.image("assets/models_scores_w2v.png")

st.markdown("---")
if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É", use_container_width=True):
    st.switch_page("app.py")
